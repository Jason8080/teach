<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 根标签 -->
<configuration>

    <!-- 引入外部配置 -->
    <properties resource="db.properties"/>

    <!-- 别名设置 -->
    <typeAliases>
        <!-- 单独设置 -->
        <!--<typeAlias type="com.itheima.mybatis.day02.crud.model.User" alias="user"/>-->
        <package name="com.itheima.mybatis.day02.crud.model"/>
    </typeAliases>

    <!-- 多环境配置, default: 指定默认环境名称 -->
    <environments default="dev">

        <!-- 环境配置,
            id: 环境名称 (可自定义名称)
         -->
        <environment id="dev">

            <!-- 事务管理配置, type: 指定事务类型
                JDBC: 直接使用了JDBC的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。
                MANAGED: 不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。
              -->
            <transactionManager type="JDBC"/>

            <!-- 数据源配置, type: 指定数据源类型
                POOLED: 使用mybatis提供的连接池。
                UNPOOLED: 不使用连接池。
                JNDI: 使用外部配置数据源, 此时type为上下文的引用
             -->
            <dataSource type="POOLED">
                <property name="driver" value="${db.driver}"/>
                <property name="url" value="${db.url}"/>
                <property name="username" value="${db.username}"/>
                <property name="password" value="${db.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 多sql文件配置 -->
    <mappers>

        <!-- 配置sql文件路径 -->
        <mapper resource="mapper/userMapper.xml"/>
        <!-- 批量配置sql文件路径 -->
        <!--<package name="com.itheima.mybatis.day02.crud.mapper"/>-->
    </mappers>
</configuration>